{"version":3,"sources":["components/img/Ryhor_Baradulin.jpg","components/Navigation.jsx","components/Landing.jsx","components/Writers.jsx","components/Writer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","Button","ChangePage","NavLink","Component","Landing","components_Navigation","Writers","Container","Row","Col","Form","FormGroup","Label","for","Input","type","name","id","placeholder","Card","CardImg","top","src","Avatar","alt","CardBody","CardTitle","CardSubtitle","CardText","GoToWriterPage","Writer","BackToWriters","App","StartPage","WritersPage","WriterPage","components_Landing","components_Writers","components_Writer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.283cd91b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ryhor_Baradulin.12ce54fe.jpg\";","import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Culture Portal</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <Button color=\"link\" onClick={this.props.ChangePage}>\r\n                  Writers\r\n                </Button>\r\n              </NavItem>\r\n\r\n              <NavItem>\r\n                <NavLink href=\"#about_us\">Collaborators</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport \"./style.css\";\r\n\r\nclass Landing extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navigation ChangePage={this.props.ChangePage} />\r\n        <div className=\"about\">\r\n          Information about 'Culture Portal': Lorem ipsum dolor sit amet,\r\n          consectetur adipisicing elit. Vel placeat, pariatur aliquid laborum\r\n          expedita quo odit eveniet ullam deserunt necessitatibus deleniti\r\n          repellat voluptatum ut sapiente cum labore eos, qui tempore. Lorem\r\n          ipsum dolor sit amet, consectetur adipisicing elit. Vel placeat,\r\n          pariatur aliquid laborum expedita quo odit eveniet ullam deserunt\r\n          necessitatibus deleniti repellat voluptatum ut sapiente cum labore\r\n          eos, qui tempore.\r\n        </div>\r\n        <div className=\"random_author\">\r\n          <h3>Author of the day</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button\r\n} from \"reactstrap\";\r\nimport Avatar from \"./img/Ryhor_Baradulin.jpg\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nclass Writers extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"writers\">\r\n        <Navigation />\r\n        <div className=\"search_container\">\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleSearch\">Search Author</Label>\r\n                    <Input\r\n                      type=\"search\"\r\n                      name=\"search\"\r\n                      id=\"exampleSearch\"\r\n                      placeholder=\"search placeholder\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleSelect\">Filter by City</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"Filter by City\"\r\n                      id=\"exampleSelect\"\r\n                    >\r\n                      <option>Minsk</option>\r\n                      <option>Vitebsk</option>\r\n                      <option>Grodno</option>\r\n                      <option>Babruisk</option>\r\n                      <option>Magilev</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Form>\r\n              </Col>\r\n              <Col>\r\n                <Card>\r\n                  <CardImg top src={Avatar} alt=\"Card image cap\" />\r\n                  <CardBody>\r\n                    <CardTitle>Григорий Бородулин</CardTitle>\r\n                    <CardSubtitle>Витебская обл</CardSubtitle>\r\n                    <CardText>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </CardText>\r\n                    <Button onClick={this.props.GoToWriterPage}>\r\n                      Read more\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card>\r\n                  <CardImg top src={Avatar} alt=\"Card image cap\" />\r\n                  <CardBody>\r\n                    <CardTitle>Григорий Бородулин</CardTitle>\r\n                    <CardSubtitle>Витебская обл</CardSubtitle>\r\n                    <CardText>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </CardText>\r\n                    <Button onClick={this.props.GoToWriterPage}>\r\n                      Read more\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card>\r\n                  <CardImg top src={Avatar} alt=\"Card image cap\" />\r\n                  <CardBody>\r\n                    <CardTitle>Григорий Бородулин</CardTitle>\r\n                    <CardSubtitle>Витебская обл</CardSubtitle>\r\n                    <CardText>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </CardText>\r\n                    <Button onClick={this.props.GoToWriterPage}>\r\n                      Read more\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card>\r\n                  <CardImg top src={Avatar} alt=\"Card image cap\" />\r\n                  <CardBody>\r\n                    <CardTitle>Григорий Бородулин</CardTitle>\r\n                    <CardSubtitle>Витебская обл</CardSubtitle>\r\n                    <CardText>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </CardText>\r\n                    <Button onClick={this.props.GoToWriterPage}>\r\n                      Read more\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Writers;\r\n","import React, { Component } from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass Writer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navigation />\r\n        <p>\r\n          Здесь после нажатия на кнопку генерится (каким-то чудом) вся инфа об\r\n          Авторе\r\n        </p>\r\n        <Button onClick={this.props.BackToWriters}>Назад</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Writer;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Landing from \"./components/Landing\";\nimport Writers from \"./components/Writers\";\nimport Writer from \"./components/Writer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      StartPage: true,\n      WritersPage: false,\n      WriterPage: false\n    };\n  }\n  ChangePage = () => {\n    this.setState({\n      StartPage: !this.state.StartPage,\n      WritersPage: !this.state.WritersPage\n    });\n  };\n\n  GoToWriterPage = () => {\n    this.setState({\n      WriterPage: !this.state.WriterPage,\n      WritersPage: !this.state.WritersPage\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.StartPage && <Landing ChangePage={this.ChangePage} />}\n        {this.state.WritersPage && (\n          <Writers GoToWriterPage={this.GoToWriterPage} />\n        )}\n        {this.state.WriterPage && (\n          <Writer BackToWriters={this.GoToWriterPage} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}